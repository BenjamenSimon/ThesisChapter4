names_to_combine <- c("GREATER LONDON", "GREATER LONDON - EAST")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
# Create a new row with the combined geometry and the name "Combined"
new_row <- data.frame(
COUNTY = "GREATER LONDON",
C_NUM = 27,
Shape = st_union(rows_to_combine$Shape),
stringsAsFactors = FALSE
)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, new_row)
county_shape_data_modified
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("GREATER LONDON", "GREATER LONDON - EAST")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
# Create a new row with the combined geometry and the name "Combined"
new_row <- data.frame(
COUNTY = "GREATER LONDON",
C_NUM = 27,
Shape = st_union(rows_to_combine$Shape)
)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, new_row)
new_row
View(new_row)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("GREATER LONDON", "GREATER LONDON - EAST")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
# Create a new row with the combined geometry and the name "Combined"
new_row <- data.frame(
COUNTY = "GREATER LONDON",
C_NUM = 27,
Shape = st_union(rows_to_combine$Shape),
stringsAsFactors = FALSE
)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data, new_row)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
GL_row = (county_shape_data$COUNTY == "GREATER LONDON")
GL_row
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
GL_row = county_shape_data[(county_shape_data$COUNTY == "GREATER LONDON")]
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
GL_row = county_shape_data[(county_shape_data$COUNTY == "GREATER LONDON"), ]
GL_row
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
GL_row$Shape
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
new_row$Shape
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
st_union(rows_to_combine$Shape)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
new_row <- data.frame(
COUNTY = "GREATER LONDON",
C_NUM = 27,
Shape = st_union(rows_to_combine$Shape),
stringsAsFactors = FALSE
)
new_row$Shape
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
GL_row$Shape =
new_row$Shape
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
GL_row$Shape = st_union(rows_to_combine$Shape)
GL_row
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("GREATER LONDON", "GREATER LONDON - EAST")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
GL_row = county_shape_data[(county_shape_data$COUNTY == "GREATER LONDON"), ]
GL_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, new_row)
GL_row
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
GL_row$Shape
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data[(county_shape_data$COUNTY == "GREATER LONDON"), ]$Shape
county_shape_data[(county_shape_data$COUNTY == "GREATER LONDON"), ]$Shape
GL_row$Shape
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("GREATER LONDON", "GREATER LONDON - EAST")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
GL_row = county_shape_data[(county_shape_data$COUNTY == "GREATER LONDON"), ]
county_shape_data[(county_shape_data$COUNTY == "GREATER LONDON"), ]$Shape
GL_row$Shape
GL_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, GL_row)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("GREATER LONDON", "GREATER LONDON - EAST")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
GL_row = county_shape_data[(county_shape_data$COUNTY == "GREATER LONDON"), ]
GL_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, GL_row)
View(county_shape_data_modified)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
anti_join(county_shape_data_modified, df_historical_herd_summary, by = c("COUNTY" = "county_name"))
anti_join(df_historical_herd_summary, county_shape_data, by = c("county_name" = "COUNTY"))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("HEREFORDSHIRE, COUNTY OF", "WORCESTERSHIRE")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
HW_row = county_shape_data[(county_shape_data$COUNTY == "HEREFORDSHIRE, COUNTY OF"), ]
HW_row$COUNTY = "HEREFORD & WORCESTER"
HW_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data_modified %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, HW_row)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("NORTH POWYS", "SOUTH POWYS")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
PW_row = county_shape_data[(county_shape_data$COUNTY == "NORTH POWYS"), ]
PW_row$COUNTY = "POWYS"
PW_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data_modified %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, PW_row)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
anti_join(county_shape_data_modified, df_historical_herd_summary, by = c("COUNTY" = "county_name"))
anti_join(df_historical_herd_summary, county_shape_data_modified, by = c("county_name" = "COUNTY"))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data_modified <- county_shape_data_modified %>%
mutate(COUNTY = case_when(
COUNTY == "DEVONSHIRE" ~ "DEVON",
COUNTY == "GREATER MANCHESTER" ~ "GREATER MANCHESTER",
COUNTY == "HERTFORD" ~ "HERTFORDSHIRE",
COUNTY == "LEICESTER" ~ "LEICESTERSHIRE",
))
anti_join(county_shape_data_modified, df_historical_herd_summary, by = c("COUNTY" = "county_name"))
anti_join(df_historical_herd_summary, county_shape_data_modified, by = c("county_name" = "COUNTY"))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("GREATER LONDON", "GREATER LONDON - EAST")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
GL_row = county_shape_data[(county_shape_data$COUNTY == "GREATER LONDON"), ]
GL_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, GL_row)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("HEREFORDSHIRE, COUNTY OF", "WORCESTERSHIRE")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
HW_row = county_shape_data[(county_shape_data$COUNTY == "HEREFORDSHIRE, COUNTY OF"), ]
HW_row$COUNTY = "HEREFORD & WORCESTER"
HW_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data_modified %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, HW_row)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("NORTH POWYS", "SOUTH POWYS")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
PW_row = county_shape_data[(county_shape_data$COUNTY == "NORTH POWYS"), ]
PW_row$COUNTY = "POWYS"
PW_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data_modified %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, PW_row)
county_shape_data_modified <- county_shape_data_modified %>%
mutate(COUNTY = case_when(
COUNTY == "DEVONSHIRE" ~ "DEVON",
COUNTY == "GREATER MANCHESTER" ~ "GREATER MANCHESTER",
COUNTY == "HERTFORD" ~ "HERTFORDSHIRE",
COUNTY == "LEICESTER" ~ "LEICESTERSHIRE",
TRUE ~ COUNTY
))
#map_names_plot <-
ggplot(data = county_shape_data) +
geom_sf(aes(fill = C_NUM)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
geom_sf_text(aes(label = COUNTY), fun.geometry = sf::st_centroid) +
theme_minimal()
anti_join(county_shape_data_modified, df_historical_herd_summary, by = c("COUNTY" = "county_name"))
anti_join(df_historical_herd_summary, county_shape_data_modified, by = c("county_name" = "COUNTY"))
df_historical_herd_summary
df_historical_herd_summary$county_name
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data_modified <- county_shape_data_modified %>%
mutate(COUNTY = case_when(
COUNTY == "DEVONSHIRE" ~ "DEVON",
COUNTY == "GREATER MANCHESTER" ~ "GREATER  MANCHESTER",
COUNTY == "HERTFORD" ~ "HERTFORDSHIRE",
COUNTY == "LEICESTER" ~ "LEICESTERSHIRE",
TRUE ~ COUNTY
))
anti_join(county_shape_data_modified, df_historical_herd_summary, by = c("COUNTY" = "county_name"))
anti_join(df_historical_herd_summary, county_shape_data_modified, by = c("county_name" = "COUNTY"))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data_modified <- sort(county_shape_data_modified)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data_modified <- sort(county_shape_data_modified, COUNTY)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data_modified <-  county_shape_data_modified[order(county_shape_data_modified$COUNTY), ]
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
NYS_row = county_shape_data[(county_shape_data$C_NUM == 50), ]
NYS_row
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data[(county_shape_data$C_NUM == 50), ]
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data[(county_shape_data$C_NUM == 50), ]$COUNTY == "NORTH YORKSHIRE (SOUTHERN)"
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data[(county_shape_data$C_NUM == 50), ]$COUNTY = "NORTH YORKSHIRE (SOUTHERN)"
county_shape_data
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data_modified[(county_shape_data_modified$C_NUM == 50), ]$COUNTY = "NORTH YORKSHIRE (SOUTHERN)"
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data <- APHA_gdb %>%
group_by(COUNTY, C_NUM) %>%
summarize() %>%
st_as_sf()
# Rows to combine (names "London" and "East London")
names_to_combine <- c("GREATER LONDON", "GREATER LONDON - EAST")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
GL_row = county_shape_data[(county_shape_data$COUNTY == "GREATER LONDON"), ]
GL_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, GL_row)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("HEREFORDSHIRE, COUNTY OF", "WORCESTERSHIRE")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
HW_row = county_shape_data[(county_shape_data$COUNTY == "HEREFORDSHIRE, COUNTY OF"), ]
HW_row$COUNTY = "HEREFORD & WORCESTER"
HW_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data_modified %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, HW_row)
# Rows to combine (names "London" and "East London")
names_to_combine <- c("NORTH POWYS", "SOUTH POWYS")
# Filter the rows with the specified names
rows_to_combine <- county_shape_data %>% filter(COUNTY %in% names_to_combine)
PW_row = county_shape_data[(county_shape_data$COUNTY == "NORTH POWYS"), ]
PW_row$COUNTY = "POWYS"
PW_row$Shape = st_union(rows_to_combine$Shape)
# Filter out the original rows that were combined
county_shape_data_modified <- county_shape_data_modified %>% filter(!COUNTY %in% names_to_combine)
# Add the new row to the original data frame
county_shape_data_modified <- rbind(county_shape_data_modified, PW_row)
county_shape_data_modified[(county_shape_data_modified$C_NUM == 50), ]$COUNTY = "NORTH YORKSHIRE (SOUTHERN)"
county_shape_data_modified <- county_shape_data_modified %>%
mutate(COUNTY = case_when(
COUNTY == "DEVONSHIRE" ~ "DEVON",
COUNTY == "GREATER MANCHESTER" ~ "GREATER  MANCHESTER",
COUNTY == "HERTFORD" ~ "HERTFORDSHIRE",
COUNTY == "LEICESTER" ~ "LEICESTERSHIRE",
TRUE ~ COUNTY
))
county_shape_data_modified <-  county_shape_data_modified[order(county_shape_data_modified$COUNTY), ]
anti_join(county_shape_data_modified, df_historical_herd_summary, by = c("COUNTY" = "county_name"))
anti_join(df_historical_herd_summary, county_shape_data_modified, by = c("county_name" = "COUNTY"))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
#map_names_plot <-
ggplot(data = county_shape_data_modified) +
geom_sf(aes(fill = C_NUM)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
geom_sf_text(aes(label = COUNTY), fun.geometry = sf::st_centroid) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
#map_names_plot <-
ggplot(data = county_shape_data) +
geom_sf(aes(fill = C_NUM)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
geom_sf_text(aes(label = COUNTY), fun.geometry = sf::st_centroid) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
#map_names_plot <-
ggplot(data = county_shape_data_modified) +
geom_sf(aes(fill = C_NUM)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
geom_sf_text(aes(label = COUNTY), fun.geometry = sf::st_centroid) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
#map_names_plot <-
ggplot(data = county_shape_data_modified %>%  st_as_sf()) +
geom_sf(aes(fill = C_NUM)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
geom_sf_text(aes(label = COUNTY), fun.geometry = sf::st_centroid) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
county_shape_data_modified <- county_shape_data_modified %>% st_as_sf()
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
#map_names_plot <-
ggplot(data = county_shape_data_modified) +
geom_sf(aes(fill = C_NUM)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
geom_sf_text(aes(label = COUNTY), fun.geometry = sf::st_centroid) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
map_names_plot_2 <-
ggplot(data = county_shape_data_modified) +
geom_sf(aes(fill = C_NUM)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt") +
geom_sf_text(aes(label = COUNTY), fun.geometry = sf::st_centroid) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
ggsave("map_names_plot_2.png", plot = map_names_plot_2, width = 20, height = 40, units = "in", dpi = 300)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
# Avg_animals_county_spatial_plot <-
county_shape_data_modified %>%
left_join(df_historical_herd_summary, by = c('COUNTY' = 'county_name')) %>%
ggplot() +
geom_sf(aes(fill = avg_animals)) +
scale_fill_viridis_c(option = "plasma", name = "Avg. Number of Animals") +
theme_minimal() +
labs(title = "Avg. Number of Animals per County")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
Avg_animals_county_spatial_plot <-
county_shape_data_modified %>%
left_join(df_historical_herd_summary, by = c('COUNTY' = 'county_name')) %>%
ggplot() +
geom_sf(aes(fill = avg_animals)) +
scale_fill_viridis_c(option = "plasma", name = "Avg. Number of Animals") +
theme_minimal() +
labs(title = "Avg. Number of Animals per County")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, message = FALSE)
options(scipen=999)
# Avg_animals_county_spatial_plot <-
county_shape_data %>%
left_join(df_historical_herd_summary, by = c('COUNTY' = 'county_name')) %>%
ggplot() +
geom_sf(aes(fill = avg_animals)) +
scale_fill_viridis_c(option = "plasma", name = "Avg. Number of Animals") +
theme_minimal() +
labs(title = "Avg. Number of Animals per County")
ggsave("Figures/Average number of animals Spatial.png", plot = Avg_animals_county_spatial_plot, width = 6, height = 6, units = "in", dpi = 300)
df_unique_movements_per_animal = dbGetQuery(con,
"SELECT eartag, COUNT(*) as num_movements
FROM (
SELECT eartag, movement_date, movement_id,
off_cph, off_county, off_parish, off_holding, off_county_name,
on_cph, on_county, on_parish, on_holding, on_county_name,
movement_date_day, movement_date_month, movement_date_year, movement_date_dow
FROM moves_no_dups_with_sameday_death_tbl
) df_unique_movements
GROUP BY eartag
")
# Rmarkdown settings
knitr::opts_chunk$set(echo = FALSE, cache = TRUE, eval= TRUE, message = FALSE, cache.path = "Caches/", fig.path = "Figures/cbHomo/")
# Default to non-scientific notation
options(scipen=999)
# Suppress summarise info
options(dplyr.summarise.inform = FALSE)
## Data manipulation
library(tidyverse)
## Plotting
library(ggplot2)
library(ggcorrplot)
source("VisualisationFunctions.R")
## MCMC Diagnostics
library(coda)
## Epidemics
library(EpidemicR) # For simulating and making inference on GSE epidemics
## Write up
library(xtable)
# True params
params <- c(0.002, 0.004, 0.015, 0.004, 0.05, 0.75, 0.2)
# Load in the inference
r19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]/res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
or19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]/other_res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
ar19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]/aug_res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
tr19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]/tuning_res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
ut19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]/update_tracker_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
## Summarise the results
summary(r19[ , ])
summary(or19[ , ])
summary(ar19[ , ])
pwd()
printwd()
wd()
wordir()
setwd("~/Documents/GIT/ThesisChapter4")
# Load in the inference
r19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]/res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
or19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]/other_res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
ar19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]/aug_res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
tr19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]/tuning_res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
ut19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]/update_tracker_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
## Summarise the results
summary(r19[ , ])
summary(or19[ , ])
summary(ar19[ , ])
## Summarise the results
summary(r19[ , ])
summary(or19[ , ])
summary(ar19[ , ])
## Plot the results
trace_plot_det = gg_trace_plot_det(r19, or19, params, 100000, c(0.65, 0.82), c(0.08, 0.25))
# Load in the inference
r19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]_run2/res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
or19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]_run2/other_res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
ar19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]_run2/aug_res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
tr19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]_run2/tuning_res_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
ut19 = read.csv("Inference/Results_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves]_run2/update_tracker_19_[Inf][Det][mSE][mEI][arSE][arEI][arDet][arDeath][arPEnv][arMoves].csv")
## Summarise the results
summary(r19[ , ])
summary(or19[ , ])
summary(ar19[ , ])
## Plot the results
trace_plot_det = gg_trace_plot_det(r19, or19, params, 100000, c(0.65, 0.82), c(0.08, 0.25))
## Save the results
ggsave(filename = "Visualisation/trace_det.png", plot = trace_plot_det, width = 9, height = 6)
## Data manipulation
library(tidyverse)
## Plotting
library(ggplot2)
library(ggcorrplot)
source("VisualisationFunctions.R")
## MCMC Diagnostics
library(coda)
## Epidemics
library(EpidemicR) # For simulating and making inference on GSE epidemics
## Write up
library(xtable)
## Plot the results
trace_plot_inf = gg_trace_plot_inf(r19, or19, params, 100000, c(0.0005, 0.006), c(0.0015, 0.007), c(0.008, 0.017), c(0.0025, 0.005), c(0.047, 0.052))
## Save the results
ggsave(filename = "Visualisation/trace_inf.png", plot = trace_plot_inf, width = 9, height = 12)
## Plot the results
hist_plot_inf = gg_hist_plot_inf(r19, or19, params, 100000, c(0.0005, 0.006), c(0.0015, 0.007), c(0.008, 0.017), c(0.0025, 0.005), c(0.047, 0.052))
## Save the results
ggsave(filename = "Visualisation/hist_inf.png", plot = hist_plot_inf, width = 9, height = 12)
contour_plot_inf = gg_contour_plot_inf(r19, or19, params, 100000, c(0.0005, 0.006), c(0.002, 0.006), c(0.009, 0.013), c(0.003, 0.00475), c(0.0485, 0.051))
ggsave(filename = "Visualisation/contour_set1.png", plot = contour_plot_inf, width = 8, height = 10)
contour_plot_inf2 = gg_contour_plot_inf2(r19, or19, params, 100000, c(0.0005, 0.006), c(0.002, 0.006), c(0.009, 0.013), c(0.003, 0.00475), c(0.0485, 0.051), c(0.7, 0.8), c(0.11, 0.17))
ggsave(filename = "Visualisation/contour_set2.png", plot = contour_plot_inf2, width = 8, height = 10)
ar19
ar19[ , c(5, 10, 15,20,25,30,35,40)]
ar19[ , c(5, 10, 15,20,25,30,35,40)] %>% as.factor()
ar19[ , c(5, 10, 15,20,25,30,35,40)] %>% mutate_if(is.integer(),as.factor)
ar19[ , c(5, 10, 15,20,25,30,35,40)] %>% mutate_if(is.integer,as.factor)
ar19[ , c(5, 10, 15,20,25,30,35,40)] %>% mutate_if(is.double,as.factor)
summary(ar19[ , c(5, 10, 15,20,25,30,35,40)] %>% mutate_if(is.double,as.factor))
